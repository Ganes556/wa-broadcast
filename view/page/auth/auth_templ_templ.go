// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.731
package view_auth

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/wa-broadcast/view"

func wsTarget(target string) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_wsTarget_0026`,
		Function: `function __templ_wsTarget_0026(target){document.addEventListener("htmx:wsAfterMessage", function (event) {
        let msg = JSON.parse(event.detail.message)
        if(msg?.context === "success") {            
            htmx.ajax("POST", "/auth", {
                target: "#res", 
                swap:"innerHTML", 
                values: {token: msg.data},
                headers: "{ 'Content-Type': 'application/json' }"
            })

            htmx.on("htmx:afterRequest", function(event) {
                const xhr = event.detail.xhr;
                if (xhr.status == 200) {
                    const redirectUrl = xhr.getResponseHeader("Location");
                    window.location = redirectUrl;
                }
            });
            return
        }
        document.querySelector(target).innerHTML = msg?.data;
    });
}`,
		Call:       templ.SafeScript(`__templ_wsTarget_0026`, target),
		CallInline: templ.SafeScriptInline(`__templ_wsTarget_0026`, target),
	}
}

func Login() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"res\" class=\"toast toast-top toast-end\"></div><section class=\"hero min-h-screen bg-base-200\"><div class=\"hero-content flex-col lg:flex-row-reverse lg:gap-x-10\"><div hx-ext=\"ws\" ws-connect=\"/ws/auth\"><div id=\"auth\" hx-swap-oob=\"innerHTML\"><span class=\"loading loading-spinner loading-lg\"></span></div></div><div><h1 class=\"text-2xl font-bold\">Scan QR to login</h1></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = wsTarget("#auth").Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</section>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = view.Layout("Login").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
